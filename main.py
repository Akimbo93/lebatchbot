import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ParseMode
import os

API_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN', 'YOUR_TOKEN_HERE')
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("üëÉ –ü—Ä–∏–≤–µ—Ç! –Ø LeBatch ‚Äî –Ω—é—Ö–∞—á, –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –±–∞—Ç—á-–∫–æ–¥—ã. –ù–∞–ø–∏—à–∏ –º–Ω–µ –±–∞—Ç—á-–∫–æ–¥, –∏ —è —Å–∫–∞–∂—É, –∫–æ–≥–¥–∞ –∞—Ä–æ–º–∞—Ç —Ä–æ–¥–∏–ª—Å—è.")

@dp.message_handler()
async def handle_batch(message: types.Message):
    code = message.text.strip().upper()
    await message.answer("üîç –ü—Ä–æ–≤–µ—Ä—è—é –±–∞—Ç—á-–∫–æ–¥...")

    result = check_batch_code(code)
    await message.answer(result, parse_mode=ParseMode.MARKDOWN)

def check_batch_code(code):
    # –ü—Ä–∏–º–µ—Ä –∑–∞–≥–ª—É—à–∫–∏
    fake_data = {
        "38R103W": "*Dior Sauvage EDP*\nüìÖ –î–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: –û–∫—Ç—è–±—Ä—å 2023\nüè≠ –ó–∞–≤–æ–¥: –§—Ä–∞–Ω—Ü–∏—è\n‚úÖ –°–≤–µ–∂–∏–π, –±–µ—Ä–∏ —Å–º–µ–ª–æ!",
        "8X01": "*Chanel Bleu EDP*\nüìÖ –î–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: –ò—é–ª—å 2022\n‚ö†Ô∏è –ú–æ–∂–µ—Ç –±—ã—Ç—å —É–∂–µ –Ω–µ –≤ –ª—É—á—à–µ–π —Ñ–æ—Ä–º–µ, –Ω—é—Ö–∞–π —Å–∞–º."
    }
    return fake_data.get(code, "‚ùì –ù–µ –Ω–∞—à—ë–ª —ç—Ç–æ—Ç –±–∞—Ç—á –≤ –±–∞–∑–µ. –í–æ–∑–º–æ–∂–Ω–æ, –±—Ä–µ–Ω–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
